import { ControllersEnum } from './controllers.enum';

export const Routes = {
  [ControllersEnum.Auth]: {
    login: 'login',
    register: 'register',
    refreshJwtToken: 'refresh/jwt-token',
    verifyEmail: 'verify-email',
    changePassword: 'change-password',
    resetPassword: 'reset-password',
    myProfile: 'me',
    myProfileUpdate: 'me/update',
    myProfileUpdateAvatar: 'me/avatar',
  },
  [ControllersEnum.Roles]: {
    list: '',
  },
  [ControllersEnum.UsersManagement]: {
    list: ':companyId',
    invite: ':companyId/invite',
    acceptInvitation: ':companyId/invite/:companyUser/accept',
    delete: ':companyId',
    updateRole: ':companyId/role',
  },
  [ControllersEnum.Companies]: {
    create: '',
    list: '',
    update: ':id',
    single: ':id',
  },
  [ControllersEnum.SMS]: {
    test: 'test',
  },
  [ControllersEnum.SmsReports]: {
    deliveryReport: ':companyId/report/delivery',
    receiveReport: ':companyId/report/received',
  },
  [ControllersEnum.SmsTemplate]: {
    create: ':companyId',
    list: ':companyId',
    update: ':companyId/:id',
    delete: ':companyId/:id',
  },
  [ControllersEnum.SmsSenders]: {
    create: ':companyId',
    list: ':companyId',
    single: ':companyId/:id',
    update: ':companyId/:id',
    delete: ':companyId/:id',
  },
  [ControllersEnum.Otps]: {
    send: '',
    verify: 'verify/msisdn',
    verifyTwoStepAuth: 'verify/two-step-auth',
    resendTwoStepAuth: 'resend/two-step-auth',
    verifyEmailVerificationLink: 'verify/email-verification-link',
    resendEmailVerificationLink: 'resend/email-verification-link',
  },
  [ControllersEnum.Balance]: {
    addBalanceIntent: ':companyId/create-add-balance-intent',
  },
  [ControllersEnum.Apis]: {
    create: ':companyId',
    list: ':companyId',
    single: ':companyId/:id',
    update: ':companyId/:id',
    delete: ':companyId/:id',
    activeStatusUpdate: ':companyId/:id/active',
    addIp: ':companyId/:id/ip',
    removeIp: ':companyId/:id/ip/:ipId',
  },
  [ControllersEnum.Contact]: {
    create: ':companyId',
    list: ':companyId',
    favouriteList: ':companyId/favourite',
    update: ':companyId/:id',
    delete: ':companyId',
    limitInfo: ':companyId/limit-info',
  },
  [ControllersEnum.ContactGroups]: {
    create: ':companyId',
    list: ':companyId',
    single: ':companyId/:id',
    update: ':companyId/:id',
    delete: ':companyId/:id',
    addContactsToExisting: ':companyId/add-to-existing',
    removeContactsFromExisting: ':companyId/remove-from-existing',
  },
  [ControllersEnum.ContactSegments]: {
    list: ':companyId',
    create: ':companyId',
    single: ':companyId/:id',
    update: ':companyId/:id',
    delete: ':companyId/:id',
    segmentContacts: ':companyId/:id/contacts',
  },
  [ControllersEnum.IntegrationPlatforms]: {
    create: ':companyId',
    list: ':companyId',
    single: ':companyId/:id',
    update: ':companyId/:id',
    delete: ':companyId/:id',
    activeStatusUpdate: ':companyId/:id/active',
    syncNow: ':companyId/:id/sync-now',
  },
  [ControllersEnum.Dashboard]: {
    balance: ':companyId/balance',
    counts: ':companyId/counts',
    chart: ':companyId/chart',
  },
  [ControllersEnum.Payments]: {
    quickPayCallback: 'callback/quickpay',
    checkTransaction: 'check-transaction/:transactionId', // return companies
    cancelTransaction: ':companyId/transactions/:orderId/:transactionId/cancel',
    getInstantPayLink: ':companyId/pay-now',
    updateCard: ':companyId/card/update',
    transactionList: ':companyId/transactions',
    singleTransaction: ':companyId/transactions/:id',
    invoice: ':companyId/:id/invoice',
  },
  [ControllersEnum.Subscriptions]: {
    updatePlan: ':companyId/update-plan',
  },
  [ControllersEnum.SmsKeywords]: {
    createKeyword: ':companyId',
    list: ':companyId',
    single: ':companyId/:id',
    updateKeyword: ':companyId/:id',
    delete: ':companyId/:id',
    addSubKeyword: 'sub-keyword/:companyId/:id',
    updateSubKeyword: 'sub-keyword/:companyId/:keywordID/:subKeywordID',
    removeSubKeyword: 'sub-keyword/:companyId/:keywordID/:subKeywordID',
    updateActiveState: ':companyId/:id/active-state',
  },
  [ControllersEnum.SmsCampaigns]: {
    create: ':companyId',
    list: ':companyId',
  },
};
